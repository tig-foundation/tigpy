from tigpy.data import *


V1 = Config(
    erc20=ERC20Config(
        rpc_url="https://mainnet.base.org",
        chain_id="0x2105",
        precision=int(1e18),
        token_address="base-gor:0x0C03Ce270B4826Ec62e7DD007f0B716068639F7B",
        minter_address="base-gor:0x30FeC1f3690F3207d1A239dB392f62C9CD1deF3F"
    ),
    qualifiers=QualifiersConfig(
        num_cutoff=1000,
        lifespan=120
    ),
    verification=VerificationConfig(
        period_multiplier=3,
        num_samples=3,
        max_seconds_to_verify=5,
        stderr_max_bytes=100000,
        max_confirmations_per_block=200,
        max_mempool_size=500,
        max_submissions_per_player_per_block=3
    ),
    preimage_threshold=PreImageThresholdConfig(
        min=0,
        max=int(1e9), # 100%
        min_delta=0,
        max_delta=int(2.5e6), # 0.25%
        update_delay=15,
        gain=int(1e5),
        update_window=10,
        target_solutions_rate=50
    ),
    blocks=BlocksConfig(
        num_per_round=10080,
        seconds_interval=60
    ),
    rewards=RewardsConfig(
      distribution=DistributionConfig(
          benchmarkers=0.85,
          innovators=0.15
      ),
      imbalance_penalty_factor=5.0,
      schedule=[
            EmissionsConfig(
                rate=100,
                round_start=1,
            ),
            EmissionsConfig(
                rate=50,
                round_start=27,
            ),
            EmissionsConfig(
                rate=25,
                round_start=79,
            ),
            EmissionsConfig(
                rate=12.5,
                round_start=183,
            ),
            EmissionsConfig(
                rate=6.25,
                round_start=391,
            ),
            EmissionsConfig(
                rate=0,
                round_start=807,
            )
      ]
    ),
    algorithm_submissions=AlgorithmSubmissionsConfig(
        adoption_threshold_to_point=0.25,
        submission_fee=5000000000000000,
        min_points_to_merge=5040,
        push_delay=3,
        git_branch="main",
        git_repo="https://github.com/tig-foundation/challenges.git"
    ),
    challenges=[
        ChallengeConfig(
            id="c001_satisfiability",
            difficulty_params=[
                DifficultyParamConfig(
                    name="num_variables",
                    min=50,
                    max=2147483647
                ),
                DifficultyParamConfig(
                    name="clauses_to_variables_percent",
                    min=300,
                    max=2147483647
                )
            ],
            preimage_threshold=int(1e9)
        ),
        ChallengeConfig(
            id="c002_vehicle_routing",
            difficulty_params=[
                DifficultyParamConfig(
                    name="num_nodes",
                    min=40,
                    max=2147483647
                ),
                DifficultyParamConfig(
                    name="percent_better_than_baseline",
                    min=25,
                    max=99
                )
            ],
            preimage_threshold=int(1e9)
        ),
        ChallengeConfig(
            id="c003_knapsack",
            difficulty_params=[
                DifficultyParamConfig(
                    name="num_items",
                    min=200,
                    max=2147483647
                ),
                DifficultyParamConfig(
                    name="percent_better_than_expected_value",
                    min=20,
                    max=99
                )
            ],
            preimage_threshold=int(1e9)
        ),
    ],
)

TEST = Config(
    erc20=ERC20Config(
        rpc_url="https://goerli.base.org",
        chain_id="0x14a33",
        precision=int(1e18),
        token_address="base-gor:0xC8BBeAE27F1AE30908E60e69D6eF0B89929fe9AA",
        minter_address="base-gor:0xe0217560FEFb31ac7E6599cF1d844CE8732e0AB0"
    ),
    qualifiers=QualifiersConfig(
        num_cutoff=1000,
        lifespan=120
    ),
    verification=VerificationConfig(
        period_multiplier=3,
        num_samples=3,
        max_seconds_to_verify=5,
        stderr_max_bytes=100000,
        max_confirmations_per_block=200,
        max_mempool_size=500,
        max_submissions_per_player_per_block=3
    ),
    preimage_threshold=PreImageThresholdConfig(
        min=0,
        max=int(1e9), # 100%
        min_delta=0,
        max_delta=int(2.5e6), # 0.25%
        update_delay=15,
        gain=int(1e5),
        update_window=10,
        target_solutions_rate=50
    ),
    blocks=BlocksConfig(
        num_per_round=5,
        seconds_interval=60
    ),
    rewards=RewardsConfig(
      distribution=DistributionConfig(
          benchmarkers=0.85,
          innovators=0.15
      ),
      imbalance_penalty_factor=5.0,
      schedule=[
            EmissionsConfig(
                rate=100,
                round_start=1,
            ),
            EmissionsConfig(
                rate=50,
                round_start=27,
            ),
            EmissionsConfig(
                rate=25,
                round_start=79,
            ),
            EmissionsConfig(
                rate=12.5,
                round_start=183,
            ),
            EmissionsConfig(
                rate=6.25,
                round_start=391,
            ),
            EmissionsConfig(
                rate=0,
                round_start=807,
            )
      ]
    ),
    algorithm_submissions=AlgorithmSubmissionsConfig(
        adoption_threshold_to_point=0.25,
        submission_fee=10000,
        min_points_to_merge=2,
        push_delay=3,
        git_branch="dev",
        git_repo="https://github.com/tig-foundation/challenges.git"
    ),
    challenges=[
        ChallengeConfig(
            id="c001_satisfiability",
            difficulty_params=[
                DifficultyParamConfig(
                    name="num_variables",
                    min=50,
                    max=2147483647
                ),
                DifficultyParamConfig(
                    name="clauses_to_variables_percent",
                    min=300,
                    max=2147483647
                )
            ],
            preimage_threshold=int(1e9)
        ),
        ChallengeConfig(
            id="c002_vehicle_routing",
            difficulty_params=[
                DifficultyParamConfig(
                    name="num_nodes",
                    min=40,
                    max=2147483647
                ),
                DifficultyParamConfig(
                    name="percent_better_than_baseline",
                    min=25,
                    max=99
                )
            ],
            preimage_threshold=int(1e9)
        ),
        ChallengeConfig(
            id="c003_knapsack",
            difficulty_params=[
                DifficultyParamConfig(
                    name="num_items",
                    min=200,
                    max=2147483647
                ),
                DifficultyParamConfig(
                    name="percent_better_than_expected_value",
                    min=20,
                    max=99
                )
            ],
            preimage_threshold=int(1e9)
        ),
    ],
)